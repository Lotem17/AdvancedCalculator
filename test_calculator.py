import main
import pytest


@pytest.mark.parametrize("expression, expected", [
    # errors
    ("3++", None),
    ("--~--5", None),
    ("#17", None),
    ("@9&6-4", None),
    ("10/0+8%10", None),
    # test tabs and spaces
    ("4 +5* (8@6)", 39),
    # test 11 simple expressions
    ("~(3!)", -6),
    ("8$12@(6&9)", 9),
    ("17# % (2^3)", 0),
    ("3!*(15-10)", 30),
    ("~2^5&7", -32),
    ("20@30/10$5", 2.5),
    ("~((3^2) @ 3!)", -7.5),
    ("6*(6&9)", 36),
    ("5!/(1 +2^2)", 24),
    ("0.0000000000000000000000000000000013#", 4),
    # test 15 complex expressions
    ("3!$5+(2^2)@4----1*2", 12),
    ("4*(--((20/10)@10))!+123#", 2886),
    ("(~(~--3)@5^3+5!)#---8", 5),
    ("(81%5)!--6*((79/12@8)#)", 97),
    ("56#*3+4!-(-7-----2)$123", -66),
    ("(2*(4@3)---(1^2)!&5)/3", 2),
    ("5+(10#$2)+--(3!@8)^2*4", 203),
    ("(8^2)@(~(4!+40))*6!+13#", 4),
    ("7#-(-6*3^--2)---(2!@5)$8", 53),
    ("(9--3)@4^2!$8+(5#-~1)", 16777222),
    ("2^3@5*5--(6!$7)%(8&9)+4.5#", 89),
    ("(12#+13^2)--(14&15@16)+14#!", 307),
    ("(((22^-3@5)#)!)*~(16^(0&7899998))", -24),

])
def test_calculator(expression, expected):
    assert main.calculator(expression) == expected
